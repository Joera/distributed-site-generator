# yaml-language-server: $schema=.fluence/schemas/fluence.json
# Defines Fluence Project, most importantly - what exactly you want to deploy and how. You can use `fluence init` command to generate a template for new Fluence project
# Documentation: https://github.com/fluencelabs/cli/tree/main/docs/configs/fluence.md

version: 7

deals:
  devWorkerV01:
    targetWorkers: 1
    pricePerWorkerEpoch: 0.00001
    collateralPerWorker: 1
    services: []
    spells: []

hosts:
  devWorkerV01:
    peerIds:
      # - 12D3KooWSMH42NaRdq8uN3pTsBgnJYSZjYrmC1DhBmBXy1hCatrj
      #- 12D3KooWCcWYUmbCoMUGeZ7QUjLkXfSa3pKzVG554s56amfsWkm4
      - 12D3KooWP55ziK6EDVvwHAeHx7pb6XEHG6ztzGKrydrCFZciKZ2E
    services:
     # - tuDsgContent
      # - tuContentStore
      # - tuDsgTemplateData
      - tuDsgRenderer
      - tuDsgWebHost
    spells: []

aquaDependencies:
  "@fluencelabs/aqua-lib": 0.9.1
  "@fluencelabs/aqua-ipfs": 0.5.31
  "@fluencelabs/spell": 0.6.10

services:
  tuDsgContent:
    get: src/services/tuDsgContent
  tuContentStore:
    get: src/services/tuContentStore
  tuCars:
    get: src/services/tuCars
  tuDsgTemplateData:
    get: src/services/tuDsgTemplateData
  tuDsgRenderer:
    get: src/services/tuDsgRenderer
  tuGit:
    get: src/services/tuGit
  tuDsgWebHost:
    get: src/services/tuDsgWebHost

relaysPath:
  - src/gateway/src

compileAqua:
  gateway:
    input: src/aqua
    output: src/gateway/src/compiled-aqua
    target: js

customFluenceEnv:
  contractsEnv: local
  relays:
    # - /ip4/143.176.14.172/tcp/9991/ws/p2p/12D3KooWSMH42NaRdq8uN3pTsBgnJYSZjYrmC1DhBmBXy1hCatrj
    # - /ip4/127.0.0.1/tcp/9991/ws/p2p/12D3KooWCcWYUmbCoMUGeZ7QUjLkXfSa3pKzVG554s56amfsWkm4
    - /ip4/143.176.14.172/tcp/9992/ws/p2p/12D3KooWP55ziK6EDVvwHAeHx7pb6XEHG6ztzGKrydrCFZciKZ2E

defaultSecretKeyName: vijzel2
