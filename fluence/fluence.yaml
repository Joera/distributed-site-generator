# yaml-language-server: $schema=.fluence/schemas/fluence.json

# Defines Fluence Project, most importantly - what exactly you want to deploy and how. You can use `fluence init` command to generate a template for new Fluence project

# Documentation: https://github.com/fluencelabs/cli/tree/main/docs/configs/fluence.md

version: 5

aquaInputPath: src/aqua/main.aqua

deals:
  dealName:
    minWorkers: 1
    targetWorkers: 3
    services: [ tuDsgContent, tuDsgRenderer ]
    spells: []

hosts:
  dsgWorkerV1:
    peerIds:
      - 12D3KooWSMH42NaRdq8uN3pTsBgnJYSZjYrmC1DhBmBXy1hCatrj
      # - 12D3KooWP55ziK6EDVvwHAeHx7pb6XEHG6ztzGKrydrCFZciKZ2E
      # - 12D3KooWCcWYUmbCoMUGeZ7QUjLkXfSa3pKzVG554s56amfsWkm4
    services:
      - tuDsgContent
      - tuDsgRenderer
      # - tuDsgWebHost
    spells: []

services:
  tuDsgContent:
    get: src/services/tuDsgContent
  tuDsgRenderer:
    get: src/services/tuDsgRenderer
  # tuDsgWebHost:
  #   get: src/services/tuDsgWebHost

customFluenceEnv:
  contractsEnv: local
  relays:
    - /ip4/143.176.14.172/tcp/9991/ws/p2p/12D3KooWSMH42NaRdq8uN3pTsBgnJYSZjYrmC1DhBmBXy1hCatrj

dependencies:
  npm:
    "@fluencelabs/aqua-ipfs": 0.5.30
