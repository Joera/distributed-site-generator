aqua Services declares *

import "./types"

service TuDsgPublicationFromJson("json"):
  parse(s: string) -> TuDsgPublication

service TuDsgAuthorFromJson("json"):
  parse(s: string) -> TuDsgAuthorData

service TuDsgContentToJson("json"):
  parse(c: TuContentItem) -> string

-- service TuDsgAuthor("tuDsgAuthor"):
--   fetch() -> TuDsgAuthorData

service TuDsgPublish("tuDsgPublish"):
  fetch(cid: string, networked_ipfs: string) -> TuDsgPublication
  import_templates(publication: TuDsgPublication, kubo_multiaddr: string) -> AquaMarineResult

service TuDsgContent("tuDsgContent"):
  bulk(publication: TuDsgPublication, post_type: string, subnet_kubo: string) -> []TuDsgRenderObject
  map(task: TuDsgPublishTask, mappings: string) -> TuDsgMapped
  includeCid(content: TuContentItem, cid: string) -> TuContentItem
  pebble(task: TuDsgPublishTask, contentItem: TuContentItem) ->  []TuDsgRenderObject
  ripple(task: TuDsgPublishTask, ripple: TuDsgRipple, contentItem: string) ->  []TuDsgRenderObject

service TuDsgTemplateData("tuDsgTemplateData"):
  map(ro: TuDsgRenderObject, body: string, content: [][]string, publication: TuDsgPublication) -> AquaMarineResult

service TuDsgRenderer("tuDsgRenderer"):
  single(ro: TuDsgRenderObject, td: []u8) -> AquaMarineResult

service TuDsgRenderCollect("tuDsgRenderCollect"):
  collect(publication_name: string, kubo_multiaddr: string) -> AquaMarineResult

service TuDsgHost("tuDsgHost"):
  update(html_cid: string, publication: TuDsgPublication, kubo: string) -> AquaMarineResult
  restart() -> bool
  certify(publication: TuDsgPublication) -> AquaMarineResult
  a_record(publication: TuDsgPublication, ip: string) -> AquaMarineResult

service TuCars("tuCars"):
  extract(contents: string, path: string) -> AquaMarineResult
  archive(path: string) -> string

service TuContentStore("tuContentStore"): 
  insert(content: TuContentItem, table: TuDsgTable) -> AquaMarineResult
  queryRipple(ripple: TuDsgRipple, table: TuDsgTable) -> AquaMarineResult
  queryCollection(collection: TuDsgCollection, table: TuDsgTable) -> AquaMarineResult

service TuDsgWebHost("tuDsgWebHost"):
  addManual(pubName: string) -> AquaMarineResult
  serve(publication: TuDsgPublication, archive_cid: string, kubo_multiaddr: string) -> AquaMarineResult
