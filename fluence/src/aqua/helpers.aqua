aqua Helpers declares * 

import "../../.fluence/aqua-dependencies/node_modules/@fluencelabs/aqua-lib/builtin"
import "../../.fluence/aqua-dependencies/node_modules/@fluencelabs/aqua-lib/subnet"

use "../../.fluence/aqua/deals.aqua"
import "./services.aqua"
import "./types.aqua"

func getContentWorkers() -> []Worker:

    deals <- Deals.get()
    dealId = deals.contentWorkerV1!.dealIdOriginal
    on HOST_PEER_ID:
        subnet <- Subnet.resolve(dealId)
        if subnet.success == false:
            Console.print(["Failed to resolve subnet: ", subnet.error])
    <- subnet.workers

func randomContentWorker() -> Worker:
    <- getContentWorkers()!

func getRenderWorkers() -> []Worker:

    deals <- Deals.get()
    dealId = deals.renderWorkerV0!.dealIdOriginal
    on HOST_PEER_ID:
        subnet <- Subnet.resolve(dealId)
    if subnet.success == false:
        Console.print(["Failed to resolve subnet: ", subnet.error])
    
    <- subnet.workers

func randomRenderWorker() -> Worker:

    <- getRenderWorkers()!

func stringtoAMResult(s: string) -> AquaMarineResult:

    output: *[]u8
    results: *string
    results <<- s
    errors: *string

    <- AquaMarineResult(
        output = output,
        results = results,
        errors = errors
    )
    